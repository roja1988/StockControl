<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.app.mapper.ItemMapper">

	<!-- SQL アイテムマスター -->

	<!-- 全件検索, 上限100件 -->
	<select id="selectAll" resultType="Item">
		SELECT DISTINCT
		mi.item_id as
		itemId,
		mi.maker_id as makerId,
		mm.maker as maker,
		mi.model_number as
		modelNumber,
		mi.item_name as
		itemName,
		mi.genre_id as
		genreId,
		mg.genre as
		genre,
		mi.scale_id as
		scaleId,
		ms.scale as scale,
		mi.series as series,
		mi.original as original,
		mi.price as price,
		mi.note
		as note,
		mi.delete_flg as deleteFlg
		FROM
		master_item mi
		LEFT JOIN
		master_maker mm
		ON
		mi.maker_id = mm.maker_id
		LEFT
		JOIN master_genre mg
		ON
		mi.genre_id =
		mg.genre_id
		LEFT JOIN master_scale
		ms
		ON mi.scale_id =
		ms.scale_id
		WHERE
		mi.delete_flg = 0
		ORDER BY makerId,modelNumber
		LIMIT 200
	</select>

	<!-- 複数条件による検索 -->
	<select id="searchItems" resultType="Item" parameterType="Item">
		SELECT DISTINCT
		<!-- ds.stock_quantity as stockQuantity, -->
		mi.item_id as
		itemId,
		mi.maker_id as makerId,
		mm.maker as maker,
		mi.model_number as
		modelNumber,
		mi.item_name as itemName,
		mi.genre_id as
		genreId,
		mg.genre
		as genre,
		mi.scale_id as scaleId,
		ms.scale as scale,
		mi.series as series,
		mi.original as original,
		mi.price as price,
		mi.note
		as note,
		mi.delete_flg as deleteFlg
		FROM
		master_item mi
		LEFT JOIN
		master_maker mm
		ON
		mi.maker_id =
		mm.maker_id
		LEFT
		JOIN master_genre mg
		ON
		mi.genre_id =
		mg.genre_id
		LEFT JOIN
		master_scale
		ms
		ON mi.scale_id =
		ms.scale_id
		<!-- LEFT JOIN data_stock ds On mi.item_id = ds.item_id -->
		<where>
			<!-- 条件1: 型番が指定されている場合 -->
			<if test="modelNumberInput != null and modelNumberInput != ''">
				AND mi.model_number LIKE CONCAT('%', #{modelNumberInput},
				'%')
			</if>
			<!-- 条件2: 製品名が指定されている場合 -->
			<if test="itemNameInput != null and itemNameInput != ''">
				AND mi.item_name LIKE CONCAT('%', #{itemNameInput}, '%')
			</if>
			<!-- 条件3: メーカーID (UIではメーカー) が指定されている場合 -->
			<if test="makerIdInput != null and makerIdInput != ''">
				AND mi.maker_id = #{makerIdInput}
			</if>
			<!-- 条件4: ジャンルID (UIではジャンル) が指定されている場合 -->
			<if test="genreIdInput != null and genreIdInput != ''">
				AND mi.genre_id = #{genreIdInput}
			</if>
			<!-- 条件5: スケールID (UIではスケール) が指定されている場合 -->
			<if test="scaleIdInput != null and scaleIdInput != ''">
				AND mi.scale_id = #{scaleIdInput}
			</if>
			<!-- 条件6: シリーズが指定されている場合 -->
			<if test="seriesInput != null and seriesInput != ''">
				AND mi.series LIKE CONCAT('%', #{seriesInput}, '%')
			</if>
			<!-- 条件6: 原作名が指定されている場合 -->
			<if test="originalInput != null and originalInput != ''">
				AND mi.original LIKE CONCAT('%', #{originalInput}, '%')
			</if>
			<!-- 固定条件: delete_flg=0 -->
			AND mi.delete_flg = 0
		</where>
		ORDER BY makerId,modelNumber
		LIMIT 200
	</select>

	<select id="selectByItemId" parameterType="int"
		resultType="Item">
		SELECT DISTINCT
		<!-- ds.stock_quantity as stockQuantity, -->
		mi.item_id as
		itemId,
		mi.maker_id as makerId,
		mm.maker as maker,
		mi.model_number as
		modelNumber,
		mi.item_name as itemName,
		mi.genre_id as
		genreId,
		mg.genre
		as genre,
		mi.scale_id as scaleId,
		ms.scale as scale,
		mi.series as series,
		mi.original as original,
		mi.price as price,
		mi.note
		as note,
		mi.delete_flg as deleteFlg
		FROM
		master_item mi
		LEFT JOIN
		master_maker mm
		ON
		mi.maker_id =
		mm.maker_id
		LEFT
		JOIN master_genre mg
		ON
		mi.genre_id =
		mg.genre_id
		LEFT JOIN
		master_scale
		ms
		ON mi.scale_id =
		ms.scale_id
		WHERE
		mi.item_id = #{itemId}
	</select>

	<!-- 製品マスターの追加 -->
	<insert id="insert" parameterType="Item" useGeneratedKeys='true'
		keyProperty='itemId'>
		INSERT INTO master_item VALUES
		(
		NULL,
		#{modelNumber},
		#{itemName},
		#{makerId},
		#{genreId},
		#{scaleId},
		#{series},
		#{original},
		#{price},
		#{note},
		0,
		NOW(),
		#{userId},
		NOW(),
		#{userId}
		)
	</insert>

	<!-- 製品マスターの更新 -->
	<update id="update" parameterType="Item">
		UPDATE master_item
		SET
		model_number = #{modelNumber},
		item_name = #{itemName},
		maker_id =
		#{makerId},
		genre_id = #{genreId},
		scale_id = #{scaleId},
		series =
		#{series},
		original = #{original},
		price = #{price},
		note = #{note},
		update_date = now(),
		update_user_id = #{userId}
		WHERE item_id = #{itemId}
	</update>

	<delete id="delete" parameterType="Item">
		DELETE FROM master_item
		WHERE
		item_id = #{itemId}
	</delete>

	<!-- 既存製品マスターのカウント -->
	<select id="countItem" parameterType="Item" resultType="Item">
		SELECT count(*) as count FROM master_item
		WHERE maker_id = #{makerId}
		and model_number = #{modelNumber}
	</select>

</mapper>
